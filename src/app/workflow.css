/* Custom React Flow Styles */

/* GPU Acceleration for smooth performance */
.react-flow__node {
  will-change: transform;
  transform: translateZ(0);
  backface-visibility: hidden;
  transition: filter 200ms ease, box-shadow 250ms ease,
    transform 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Disable transform transition during resize to prevent visual jumping */
.react-flow__node.resizing {
  transition: filter 200ms ease, box-shadow 250ms ease !important;
}

/* FORCE remove ALL borders/outlines from React Flow node wrappers for groups */
.react-flow__node.react-flow__node-group,
div[class*="react-flow__node"].react-flow__node-group {
  border: 0 !important;
  outline: 0 !important;
  box-shadow: none !important;
  background: transparent !important;
  padding: 0 !important;
  margin: 0 !important;
}

.react-flow__edge-path {
  transform: translateZ(0);
}

.react-flow__viewport {
  will-change: transform;
}

/* Selected nodes - Styling handled in globals.css (except groups which handle their own styling) */
.react-flow__node.selected:not(.react-flow__node-group) {
  /* Selection styling is applied to the inner div in globals.css */
}

/* Group nodes - Clean unibody design with internal styling */
.react-flow__node-group,
.react-flow__node-group.selected,
.react-flow__node-group.selectable,
.react-flow__node.react-flow__node-group {
  /* All styling is handled in the GroupNode component */
  /* Override XYFlow default node styles via CSS variables */
  --xy-node-border: 0 solid transparent !important;
  --xy-node-boxshadow-selected: none !important;
  --xy-node-boxshadow-hover: none !important;
  --xy-node-background-color: transparent !important;
  --xy-node-group-background-color: transparent !important;
  background: transparent !important;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
  animation: none !important;
  padding: 0 !important;
  margin: 0 !important;
}

/* Fix visual jumping during group resize from top/left edges */
.react-flow__node-group.resizing,
.react-flow__node-group .react-flow__resize-control.line {
  transition: none !important;
}

/* Smooth resize for group nodes - disable transform transition during resize */
.react-flow__node-group {
  transition: filter 200ms ease, box-shadow 250ms ease !important;
}

/* Also remove any potential borders/outlines from wrapper elements */
.react-flow__node-group > *:first-child {
  /* Ensure the inner content has no unexpected borders */
  outline: none !important;
}

/* Selection ring animation removed - handled in globals.css */

/* Node entrance animation - Only on first appearance */
@keyframes node-entrance {
  from {
    opacity: 0;
    transform: translateZ(0) scale(0.85);
  }
  to {
    opacity: 1;
    transform: translateZ(0) scale(1);
  }
}

/* Apply entrance animation only to new nodes, not on every render */
.react-flow__node.node-entering {
  animation: node-entrance 300ms cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Edge path - Default green color */
.react-flow__edge-path {
  stroke: #095D40 !important;
  stroke-width: 3.5;
  stroke-linecap: round;
}

/* Override ReactFlow's default edge color variables */
.react-flow__edge {
  --xy-edge-stroke: #095D40 !important;
  --xy-edge-stroke-selected: #095D40 !important;
}

/* Force all edge markers (arrows) to be green */
.react-flow__arrowhead,
.react-flow__edge-path,
.react-flow__edge marker,
marker {
  fill: #095D40 !important;
  stroke: #095D40 !important;
  color: #095D40 !important;
}

/* Keep threads above group surfaces while preserving node interactivity */
.react-flow__edges {
  z-index: 5 !important;
}

/* Removed global pointer-events rule to allow custom edges to handle their own interactions */

.react-flow__connection {
  z-index: 6 !important;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #095D40 !important;
  stroke-width: 4.5;
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke: #095D40 !important;
  stroke-width: 4;
}

/* Controls */
.react-flow__controls {
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08), 0 1px 3px rgba(0, 0, 0, 0.04);
  border: 1px solid #e8ecef;
  border-radius: 16px;
  overflow: hidden;
  backdrop-filter: blur(12px);
  background: rgba(255, 255, 255, 0.98);
}

.react-flow__controls-button {
  background: transparent;
  border-bottom: 1px solid #e8ecef;
  width: 48px;
  height: 48px;
  transition: all 200ms ease;
}

.react-flow__controls-button:last-child {
  border-bottom: none;
}

.react-flow__controls-button:hover {
  background: #f5f5f7;
}

.react-flow__controls-button svg {
  width: 22px;
  height: 22px;
  fill: #6b7280;
  transition: fill 200ms ease;
}

.react-flow__controls-button:hover svg {
  fill: #095D40;
}

/* Attribution */
.react-flow__attribution {
  display: none;
}

/* Selection */
.react-flow__selection {
  background: rgba(9, 93, 64, 0.08);
  border: 1.5px solid #095D40;
}

/* Connection line - Enhanced with animation */
.react-flow__connectionline {
  stroke: #095D40 !important;
  stroke-width: 4 !important;
  stroke-linecap: round;
  filter: drop-shadow(0 2px 4px rgba(9, 93, 64, 0.3));
  animation: connection-pulse 1.5s ease-in-out infinite;
}

/* Connection line path */
.react-flow__connectionline-path {
  stroke: #095D40 !important;
  fill: none !important;
}

@keyframes connection-pulse {
  0%,
  100% {
    opacity: 0.8;
    stroke-width: 4;
  }
  50% {
    opacity: 1;
    stroke-width: 4.5;
  }
}

/* Edges when connecting - Flow animation */
.react-flow__edge.animated .react-flow__edge-path {
  stroke-dasharray: 8 8;
  animation: edge-flow 1.5s linear infinite;
}

@keyframes edge-flow {
  from {
    stroke-dashoffset: 16;
  }
  to {
    stroke-dashoffset: 0;
  }
}

/* Edge hover - Smooth thickness transition (removed transition from d attribute for instant rendering) */
.react-flow__edge .react-flow__edge-path {
  transition: stroke 200ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-width 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Edge selected - Enhanced glow */
.react-flow__edge.selected .react-flow__edge-path {
  filter: drop-shadow(0 2px 6px rgba(9, 93, 64, 0.35));
}

/* Node dragging - GPU optimized (groups handle their own styling) */
.react-flow__node.dragging:not(.react-flow__node-group),
.react-flow__node.dragging-node:not(.react-flow__node-group) {
  cursor: grabbing;
  opacity: 0.85;
  transform: translateZ(0) scale(1.02);
  transition: none; /* Disable transitions while dragging for smoothness */
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15), 0 0 0 2px rgba(21, 94, 239, 0.3);
  z-index: 1000;
}

/* Group node cursor - ensure grab cursor is visible */
.react-flow__node-group {
  cursor: grab !important;
}

.react-flow__node-group.dragging,
.react-flow__node-group.dragging-node {
  cursor: grabbing !important;
}

/* Override cursor on all children during drag to ensure grabbing cursor shows */
.react-flow__node-group.dragging *,
.react-flow__node-group.dragging-node *,
.react-flow__node-group:active *,
.react-flow__node-group.selected:active * {
  cursor: grabbing !important;
}

/* Node hover (groups handle their own hover state) */
.react-flow__node:hover:not(.react-flow__node-group) {
  filter: brightness(0.98);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08), 0 4px 8px rgba(0, 0, 0, 0.06);
}

@keyframes drag-pulse {
  0%,
  100% {
    opacity: 0.6;
    transform: scale(1);
  }
  50% {
    opacity: 0.3;
    transform: scale(1.1);
  }
}

/* Handle hover states - Enhanced with pulse animation */
.react-flow__handle {
  width: 16px !important;
  height: 16px !important;
  border-width: 3px !important;
  border-color: #095D40 !important; /* Brand green */
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0.6;
  transform: translateZ(0);
  cursor: crosshair;
  background: white !important;
}

.react-flow__handle:hover {
  opacity: 1 !important;
  transform: scale(1.5);
  border-color: #095D40 !important;
  border-width: 3px !important;
  box-shadow: 0 0 0 4px rgba(9, 93, 64, 0.15), 0 0 12px rgba(9, 93, 64, 0.3),
    0 4px 8px rgba(0, 0, 0, 0.1) !important;
  animation: pulse-handle 1.5s ease-in-out infinite;
}

.react-flow__handle:hover::before {
  opacity: 1;
  transform: translateZ(0) scale(1.6);
  box-shadow: 0 0 0 4px rgba(9, 93, 64, 0.15), 0 2px 8px rgba(9, 93, 64, 0.2);
  animation: pulse-ring 1.8s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse-ring {
  0%,
  100% {
    box-shadow: 0 0 0 4px rgba(9, 93, 64, 0.15), 0 2px 8px rgba(9, 93, 64, 0.2);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(9, 93, 64, 0.08),
      0 4px 12px rgba(9, 93, 64, 0.15);
  }
}

.react-flow__node:hover .react-flow__handle {
  opacity: 1;
}

/* Ensure group node handles remain interactive and visible */
.react-flow__node-group .react-flow__handle {
  opacity: 1 !important;
  pointer-events: all !important;
}

/* Valid connection target - glow effect */
.react-flow__handle.connecting {
  opacity: 1;
  transform: translateZ(0) scale(1.8);
  box-shadow: 0 0 0 6px rgba(9, 93, 64, 0.25), 0 0 20px rgba(9, 93, 64, 0.4);
  animation: glow-pulse 1.2s ease-in-out infinite;
}

@keyframes glow-pulse {
  0%,
  100% {
    box-shadow: 0 0 0 6px rgba(9, 93, 64, 0.25), 0 0 20px rgba(9, 93, 64, 0.4);
  }
  50% {
    box-shadow: 0 0 0 8px rgba(9, 93, 64, 0.35), 0 0 30px rgba(9, 93, 64, 0.5);
  }
}

/* Connection snapping magnetism effect */
.react-flow__handle.valid-target {
  opacity: 1;
  transform: translateZ(0) scale(2);
  box-shadow: 0 0 0 8px rgba(9, 93, 64, 0.3), 0 0 25px rgba(9, 93, 64, 0.5);
  border-color: #095D40 !important;
}

/* Source handle (where connection starts) */
.react-flow__handle-connecting {
  opacity: 1;
  transform: translateZ(0) scale(1.4);
}

/* Position handles on sides for horizontal flow */
.react-flow__handle-left {
  left: -7px !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
}

.react-flow__handle-right {
  right: -7px !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
}

/* Make handles more visible on hover */
.react-flow__node:hover .react-flow__handle {
  opacity: 1;
}

.react-flow__node:hover .react-flow__handle-left,
.react-flow__node:hover .react-flow__handle-right {
  transform: translateY(-50%) translateZ(0) scale(1.3) !important;
}

/* Connection line styling for horizontal flow */
.react-flow__edge-path {
  stroke-linecap: round;
}

/* Smooth panel animations */
@keyframes slide-in-from-right {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.animate-in {
  animation-duration: 200ms;
  animation-timing-function: ease-out;
  animation-fill-mode: both;
}

.slide-in-from-right {
  animation-name: slide-in-from-right;
}

/* Custom Chat Scrollbar */
.chat-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.chat-scrollbar::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.02);
  border-radius: 8px;
}

.chat-scrollbar::-webkit-scrollbar-thumb {
  background: #D4AF7F;
  border-radius: 8px;
  border: 2px solid transparent;
  background-clip: padding-box;
  transition: background 200ms ease;
}

.chat-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #095D40;
  border: 2px solid transparent;
  background-clip: padding-box;
}

.chat-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: #D4AF7F rgba(0, 0, 0, 0.02);
}

/* Loading pulse animation */
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Smooth fade-in */
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out;
}
